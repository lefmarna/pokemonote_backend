version: 2.1

# orbsは構成内容をまとめたコマンドが使えるようになるので便利
orbs:
  ruby: circleci/ruby@1.1.2

#  実行環境を定義
executors:
  default:
    docker:
      # stretch:バージョンを厳密に定義・node:Node.jsがプリインストールされているイメージを取得
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          DATABASE_HOST: 127.0.0.1
          DATABASE_PASSWORD: password
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: password

jobs:
  test:
    executor:
      name: default
    steps:
      # Gitリポジトリの内容をコピー
      - checkout

      # Bundle Install
      - ruby/install-deps

      # APIモードのため、yarn install は不要

      # DBのセットアップ
      - run:
          name: "DBのコンテナが起動するまで待機する"
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: "DBの作成"
          command: bundle exec rails db:create RAILS_ENV=test
      - run:
          name: "DBの反映"
          command: bundle exec rails db:migrate RAILS_ENV=test

      # RSpecによるテスト
      - ruby/rspec-test

  # AWSへのデプロイ
  deploy:
    executor:
      name: default
    steps:
      # Gitリポジトリの内容をコピー
      - checkout

      # Bundle Install
      - ruby/install-deps

      # CircleCI に登録した秘密鍵を呼び出す
      - add_ssh_keys:
          fingerprints:
            - ef:00:8d:58:69:f4:da:47:8f:94:0c:07:18:aa:92:88

      # デプロイ
      - run:
          name: Unicornのプロセスをkill
          command: ssh -o StrictHostKeyChecking=no ec2-user@${ELASTIC_IP} 'kill `cat /var/www/pokemonote_backend/shared/tmp/pids/unicorn.pid`'
      - run:
          name: Capistranoを実行
          command: bundle exec cap production deploy

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      # masterブランチにpushされたときのみdeployを実行
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
